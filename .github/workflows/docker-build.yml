name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    # MySQL 서비스 추가
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 0000
          MYSQL_DATABASE: sayup_db
          MYSQL_USER: user
          MYSQL_PASSWORD: 0000
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          --name=mysql
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Create file upload directory
      run: mkdir -p /tmp/file/temp
      
    # MySQL 연결 문제를 해결하기 위한 접근 방식 수정
    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be ready..."
        # 대신 MySQL 컨테이너가 정상적으로 준비될 때까지 대기
        timeout 30s bash -c 'until docker exec mysql mysql -u root -p0000 -e "SELECT 1"; do sleep 2; done'
        echo "MySQL is ready!"
      
    - name: Build with Gradle (including tests)
      run: ./gradlew build
      env:
        DB_CONNECTION: mysql
        DB_NAME: sayup_db
        DB_USERNAME: root
        DB_PASSWORD: 0000
        DB_HOST: mysql # 서비스 컨테이너 이름으로 호스트 변경
        FILE_UPLOAD_DIR: /tmp/file/temp
        API_KEY: temp
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/sayup:latest,${{ secrets.DOCKERHUB_USERNAME }}/sayup:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sayup:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sayup:buildcache,mode=max
        build-args: |
          DB_CONNECTION=mysql
          DB_NAME=sayup_db
          DB_USERNAME=root
          DB_PASSWORD=0000
          FILE_UPLOAD_DIR=/file/temp
          API_KEY=temp
